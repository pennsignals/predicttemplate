version: "3.8"

x-hashicorp-config: &hashicorp-config
  CONSUL_ADDR: "${CONSUL_ADDR}"
  NOMAD_ADDR: "${NOMAD_ADDR}"
  VAULT_ADDR: "${VAULT_ADDR}"
  VAULT_TOKEN: "${VAULT_TOKEN}"
  VERSION: "${VERSION}"

volumes:
  postgres-data:

services:
  grafana:
    depends_on:
      - postgres
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_REPORTING_ENABLED=false
    expose:
      - "3000"
    image: grafana/grafana-oss:8.2.1
    ports: # host port: container port
      - "3000:3000"
    restart: always
    stop_signal: SIGINT
    volumes:
      - ./grafana/etc/grafana/provisioning:/etc/grafana/provisioning

  jupyterlab:
    build:
      context: .
      dockerfile: jupyterlab/dockerfile
      target: jupyterlab
    depends_on:
      - postgres
    environment:
      - CONFIG=./predict/local/docker.yaml
      - ENV=./predict/secrets/docker.env
    expose:
      - "8888"
    ports: # host port: container port
      - "8888:8888" # jupyterlab
    volumes:
      - ./predict/gold:/gold:rw
      - ./predict/local:/local:rw
      - ./predict/model:/model:rw
      - ./predict/secrets:/secrets:ro
      - ./:/tmp

  binaries:
    build:
      context: .
      dockerfile: jupyterlab/dockerfile
      target: binaries

  forge:
    build:
      context: .
      dockerfile: jupyterlab/dockerfile
      target: forge

  postgres:
    build:
      context: ./postgres
      dockerfile: dockerfile
      target: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=test
      - TIMESCALEDB_TELEMETRY=off
      - TS_TUNE_MEMORY=8GB
      - TS_TUNE_NUM_CPUS=4
    expose:
      - "5432"
    ports: # host port: container port
      - "5432:5432"
    restart: always
    stop_signal: SIGINT
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/sql/patchdb.d:/docker-entrypoint-patchdb.d

  # docker-compose run predict predict
  # docker-compose run predict publish.flowsheets
  # docker-compose run predict create.gold
  # docker-compose run predict validate.gold
  predict:
    depends_on:
      - postgres
    environment:
      - CONFIG=./predict/local/docker.yaml
      - ENV=./predict/secrets/docker.env
    volumes:
      - ./predict/gold:/gold:rw
      - ./predict/local:/local:ro
      - ./predict/model:/model:ro
      - ./predict/secrets:/secrets:ro

  predict.test:
    volumes:
      - ./predict/gold:/gold:rw
      - ./predict/local:/local:ro
      - ./predict/model:/model:ro
      - ./predict/secrets:/secrets:ro

  test:
    build:
      context: .
      dockerfile: predict/dockerfile
      target: test

  pre-commit:
    build:
      context: .
      dockerfile: predict/dockerfile
      target: pre-commit
