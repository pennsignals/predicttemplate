{% raw %}name: release

on:
  release:
    types:
      - published

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.publish.outputs.tag }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: publish
        id: publish
        uses: pennsignals/publish_docker-compose@v0.1.1
        with:
          docker_compose: "docker-compose.yml"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"

  staging:
    if: ${{ github.event.release.prerelease }}
    needs: publish
    runs-on: [self-hosted, nomad, azure, staging]

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # Deploy pre-release to staging
      - name: staging_consul
        uses: pennsignals/consul_configs_submit_action@v1.0.0
        with:
          addr: "${{ secrets.STAGING_CONSUL_ADDR }}"
          config: "./local/deploy_config.yml"
          env: "staging"

      - name: staging_deploy
        run: | 
          VAR_FILE=./local/github.env VERSION="${{ needs.publish.outputs.tag }}" ./scripts/deploy.sh
        with:
          version: "${{ needs.publish.outputs.tag }}"
          config: "./local/deploy_config.yml"
          nomad_addr: "${{ secrets.STAGING_NOMAD_ADDR }}"

      - name: tar
        run: tar -czvf nomad.tar.gz nomad/

      # Upload rendered nomad jobs as artifacts
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: nomad
          path: nomad.tar.gz

      # add artifacts to release
      - name: release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v1
        with:
          files: nomad.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  production:
    if: ${{ !github.event.release.prerelease }}
    needs: publish
    runs-on: [self-hosted, nomad, azure, production]

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # Deploy main release to Production
      - name: production_consul
        uses: pennsignals/consul_configs_submit_action@v1.0.0
        with:
          addr: "${{ secrets.PRODUCTION_CONSUL_ADDR }}"
          config: "./local/deploy_config.yml"
          env: "production"

      - name: production_deploy
        uses: pennsignals/deploy_action@v0.1.3
        with:
          version: "${{ needs.publish.outputs.tag }}"
          config: "./local/deploy_config.yml"
          nomad_addr: "${{ secrets.PRODUCTION_NOMAD_ADDR }}"

      - name: tar
        run: tar -czvf nomad.tar.gz nomad/

      # Upload rendered nomad jobs as artifacts
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: nomad
          path: nomad.tar.gz

      # add artifacts to release
      - name: release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v1
        with:
          files: nomad.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}{% endraw %}
